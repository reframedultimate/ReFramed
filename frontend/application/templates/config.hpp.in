#pragma once

#define STRINGIFY_(x) #x
#define STRINGIFY(x) STRINGIFY_(x)

#define APP_VERSION_MAJOR ${PROJECT_VERSION_MAJOR}
#define APP_VERSION_MINOR ${PROJECT_VERSION_MINOR}
#define APP_VERSION_PATCH ${PROJECT_VERSION_PATCH}
#define APP_VERSION_RC    ${UH_VERSION_RC}

#define APP_VERSION_RC_${UH_VERSION_RC}
#if defined(APP_VERSION_RC_alpha)
#   define APP_VERSION_RC_SHORT 'a'
#elif defined(APP_VERSION_RC_beta)
#   define APP_VERSION_RC_SHORT 'b'
#elif defined(APP_VERSION_RC_rc1
#   define APP_VERSION_RC_SHORT 1
#elif defined(APP_VERSION_RC_rc2
#   define APP_VERSION_RC_SHORT 2
#elif defined(APP_VERSION_RC_rc3
#   define APP_VERSION_RC_SHORT 3
#elif defined(APP_VERSION_RC_rc4
#   define APP_VERSION_RC_SHORT 4
#elif defined(APP_VERSION_RC_
#   define APP_VERSION_RC_SHORT 0
#endif

#if defined(APP_VERSION_RC_)
#   define APP_VERSION_STR \
        STRINGIFY(APP_VERSION_MAJOR) "." STRINGIFY(APP_VERSION_MINOR) "." STRINGIFY(APP_VERSION_PATCH)
#else
#   define APP_VERSION_STR \
        STRINGIFY(APP_VERSION_MAJOR) "." STRINGIFY(APP_VERSION_MINOR) "." STRINGIFY(APP_VERSION_PATCH) "-" STRINGIFY(APP_VERSION_RC_STR)
#endif

#define APP_VERSION \
    ((APP_VERSION_MAJOR << 24) | (APP_VERSION_MINOR << 16) | (APP_VERSION_PATCH << 8) | APP_VERSION_RC_SHORT)
